swagger: '2.0'
info:
  version: v1.0
  title: Subscriber API
  description: >
    A Subscriber is user that has engaged for your communications, usually over email.
host: api.hanzo.ai
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    scopes: {}
    tokenUrl: 'https://api.hanzo.ai/auth'
  Authorization:
    name: Authorization
    type: apiKey
    in: header
  token:
    name: token
    type: apiKey
    in: query

paths:
  '/subscriber/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    delete:
      operationId: deleteSubscriber
      description: >
        Deletes the requested subscriber. Cannot be undone.
      parameters:
        - name: token
          in: query
          required: false
          type: string
          description: The unique identifier for the Store.
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}

    put:
      operationId: replaceSubscriber
      description: >
        Replaces the specified subscriber wholly. Any fields not passed are blanked.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Subscriber'
      responses:
        '200':
          description: 'Everything is OK'
          schema:
            $ref: '#/definitions/Subscriber'

    patch:
      operationId: updateSubscriber
      description: >
        Replaces a subscriber object piecemeal. Any fields not passed are not changed.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Subscriber'
      responses:
        '200':
          description: 'Everything is OK'
          schema:
            $ref: '#/definitions/Subscriber'
    get:
      operationId: GET_subscriber-id
      description: >
        Returns the specified Subscriber.
      responses:
        '200':
          description: 'Everything is OK'
          schema:
            $ref: '#/definitions/Subscriber'
  '/subscriber':
    post:
      operationId: createSubscriber
      description: >
        Creates a new Subscriber.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Subscriber'
      responses:
        '201':
          description: 'Everything is OK. New subscriber created.'
          schema:
            $ref: '#/definitions/Subscriber'
    get:
      operationId: retrieveAllSubscribers
      description: >
        Returns a list of all available Subscribers.
      parameters:
        - name: token
          in: query
          type: string
        - name: accept
          in: header
          type: string
      responses:
        '200':
          description: 'Everything is OK.'
          schema:
            $ref: '#/definitions/SubscriberArray'

definitions:
  Subscriber:
    title: Subscriber
    type: object
    properties:
      id:
        type: string
        description: The hanzo-assigned guid to identify this item.
      createdAt:
        type: string
        description: The time this Variant was created. Conforms to RFC3339.
      updatedAt:
        type: string
        description: The time this Variant was last updated. Conforms to RFC3339.
      userId:
        type: string
        description: The human-friendly identifier for the subscriber.
      email:
        type: string
        description: The email used with the subscriber.
      mailingListId:
        type: string
        description: The ID of the mailing list this subscriber opted in to.
      unsubscribed:
        type: boolean
        description: Whether or not this user is unsubscribed.
      unsubscribeDate:
        type: string
        description: If the user is unsubscribed, this will tell you when they did it. Conforms to RFC3339.
      client:
        $ref: '#/definitions/Client'
      metadata:
        type: array
        description: Arbitrary data associated with this subscriber. It is a key-value map of strings.
        items:
          type: object

  SubscriberArray:
    title: SubscriberArray
    description: An array of Subscribers
    type: array
    items:
      $ref: '#/definitions/Subscriber'
