swagger: '2.0'
info:
  version: v1.0
  title: Campaign API
host: api.hanzo.ai
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    scopes: {}
    tokenUrl: 'https://api.hanzo.ai/auth'
  Authorization:
    name: Authorization
    type: apiKey
    in: header
  token:
    name: token
    type: apiKey
    in: query

paths:
  '/campaign/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    delete:
      operationId: deleteCampaign
      description: >
        Deletes the requested campaign. Cannot be undone.
      parameters:
        - name: token
          in: query
          required: false
          type: string
          description: The unique identifier for the Store.
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}

    put:
      operationId: replaceCampaign
      description: >
        Replaces the specified campaign wholly. Any fields not passed are blanked.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Campaign'
      responses:
        '200':
          description: 'Everything is OK'
          schema:
            $ref: '#/definitions/Campaign'

    patch:
      operationId: updateCampaign
      description: >
        Replaces a campaign object piecemeal. Any fields not passed are not changed.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Campaign'
      responses:
        '200':
          description: 'Everything is OK'
          schema:
            $ref: '#/definitions/Campaign'

    get:
      operationId: getCampaign
      description: >
        Returns the specified campaign.
      responses:
        '200':
          description: 'Everything is OK'
          schema:
            $ref: '#/definitions/Campaign'

  '/campaign':
    post:
      operationId: createCampaign
      description: >
        Creates a new campaign.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Campaign'
      responses:
        '201':
          description: 'Everything is OK. New campaign created.'
          schema:
            $ref: '#/definitions/Campaign'

    get:
      operationId: retrieveAllCampaigns
      description: >
        Returns a list of all available campaigns.
      parameters:
        - name: token
          in: query
          type: string
        - name: accept
          in: header
          type: string
      responses:
        '200':
          description: 'Everything is OK.'
          schema:
            $ref: '#/definitions/CampaignArray'

definitions:
  Campaign:
    title: Campaign
    type: object
    properties:
      id:
        type: string
        description: The hanzo-assigned guid to identify this item.
      createdAt:
        type: string
        description: The time this Variant was created. Concampaigns to RFC3339.
      updatedAt:
        type: string
        description: The time this Variant was last updated. Concampaigns to RFC3339.
      slug:
        type: string
        description: The human-friendly identifier for the campaign.
      organizationId:
        type: string
        description: The organization that owns this campaign.
      approved:
        type: boolean
        description: Whether or not the campaign is approved to operate.
      enabled:
        type: boolean
        description: Whether or not the campaign is enabled.
      title:
        type: string
        description: The primary title for the campaign.
      tagline:
        type: string
        description: The catch phrase for the campaign.
      pitchMedia:
        type: string
        description: Pitch media
      videoUrl:
        type: string
        description: The video URL associated with the campaign.
      videoOverlayUrl:
        type: string
        description: The message to overlay on the video.
      imageUrl:
        type: string
        description: The image url associated with the campaign.
      description:
        type: string
        description: The long form description of the campaign.
      backers:
        type: integer
        format: int64
        description: The number of backers in the campaign.
      raised:
        type: integer
        format: int64
        description: The amount raised in the campaign.
      thumbnail:
        type: string
        description: The thumbnail image for the campaign.
      originalUrl:
        type: string
        description: Previous url, if it has changed.
      storeUrl:
        type: string
        description: The store associated with the campaign.

  CampaignArray:
    title: CampaignArray
    description: An array of campaigns
    type: array
    items:
      $ref: '#/definitions/Campaign'
