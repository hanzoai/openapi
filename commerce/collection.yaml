swagger: '2.0'
info:
  version: v1.0
  title: Collection API
  description: >
    A collection represents a set of Products designed to be sold together,
    usually for some sort of discount or special deal. They can be used for
    anything from clearance offers to ease-of-use upsells.
host: api.hanzo.ai
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    scopes: {}
    tokenUrl: 'https://api.hanzo.ai/auth'
  Authorization:
    name: Authorization
    type: apiKey
    in: header
  token:
    name: token
    type: apiKey
    in: query

paths:
  '/collection/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    patch:
      operationId: updateCollection
      description: >
        Updates the Collection piecemeal. Parameters not included in the request are not updated.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Collection'
      responses:
        '200':
          description: 'Everything is okay!'
          schema:
            $ref: '#/definitions/Collection'

    delete:
      operationId: deleteCollection
      description: >
        Deletes a Collection.  Cannot be undone.
      responses:
        '200':
          description: ''

    get:
      operationId: getCollection
      description: >
        Returns a given Collection.
      parameters:
        - name: token
          in: query
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Collection'
    put:
      operationId: replaceCollection
      description: >
        Entirely replaces the given Collection with what is passed.
        Any unpassed parameters will be blanked.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Collection'
      responses:
        '200':
          description: 'Everything is OK.'
          schema:
            $ref: '#/definitions/Collection'
  /collection:
    get:
      operationId: retrieveAllCollections
      parameters:
        - name: token
          in: query
          type: string
        - name: Accept
          in: header
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Collection'
    post:
      operationId: createCollection
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Collection'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Collection'

definitions:
  Collection:
    title: Collection
    description: >
      A Collection model, usable in POST, PUT, or PATCH requests,
      and returned from GET, POST, PUT, and PATCH.
    type: object
    properties:
      id:
        type: string
        description: The hanzo-assigned guid to identify this item.
      createdAt:
        type: string
        description: The time this Variant was created. Conforms to RFC3339.
      updatedAt:
        type: string
        description: The time this Variant was last updated. Conforms to RFC3339.
      slug:
        type: string
        description: The human-readable unique identifier for use in URLs.
      name:
        type: string
        description: A short name for the collection.
      description:
        type: string
        description: The long-form description of what the collection is.
      productIds:
        type: string
        description: A list of IDs relating to Products included in the Collection.
      variantIds:
        type: string
        description: A list of IDs relating to Variants include in the Collection.
