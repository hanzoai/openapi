swagger: '2.0'
info:
  version: v1.0
  title: Order API
  description: >
    An Order represents a confirmed request for goods or services.
    These are generally what a business wants a lot of to make money.
host: api.hanzo.ai
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    scopes: {}
    tokenUrl: 'https://api.hanzo.ai/auth'
  Authorization:
    name: Authorization
    type: apiKey
    in: header
  token:
    name: token
    type: apiKey
    in: query

paths:
  '/order/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    delete:
      operationId: deleteOrder
      description: >
        Completely deletes the associated Order.  Cannot be undone.
      produces:
        - text/html
      parameters:
        - name: token
          in: query
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '204':
          description: 'Everything is OK.'
          schema:
            type: object
            properties: {}
          examples:
            application/json: null

    get:
      operationId: getOrder
      description: >
        Returns a specified order.
      parameters:
        - name: token
          in: query
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Order'

    patch:
      operationId: updateOrder
      description: >
        Updates the specified Order object piecemeal. Any fields not
        included are not updated.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: 'Everything is OK.'
          schema:
            $ref: '#/definitions/Order'

    put:
      operationId: replaceOrder
      description: >
        Wholly replaces the specified Order object in-place. Any fields not
        included will be blanked.
      responses:
        '200':
          description: 'Everything is OK.'
          schema:
            $ref: '#/definitions/Order'

  /order:
    post:
      operationId: createOrder
      description: >
        Creates a new Order.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Order'
      responses:
        '201':
          description: 'Everything is OK. New order created.'
          schema:
            $ref: '#/definitions/Order'

    get:
      operationId: retrieveOrder
      description: Returns a list of all available orders.
      parameters:
        - name: token
          in: query
          type: string
        - name: Accept
          in: header
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderArray'

  '/order/{id}/refund':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      operationId: createOrderRefund
      description: >
        Issues a refund for the amount (specified in the POST body) to
        the order specified by the given ID.
      parameters:
        - name: token
          in: query
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string
              amount:
                type: integer
            example:
              id: 0WizkeyjF2HwmEKFD1gJ
              amount: 2400
        - name: Accept
          in: header
          type: string
        - name: Content-Type
          in: header
          type: string
      responses:
        '200':
          description: 'Everything is OK.'
          schema:
              $ref: '#/definitions/Order'

  '/order/{id}/payments':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      operationId: listOrderPayments
      description: >
        Retrieves payments on an order with the given ID.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PaymentArray'

  '/order/{id}/capture':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    post:
      operationId: captureOrderPayment
      description: >
        Captures a pre-Authorized payment.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Payment'

definitions:
  Payment:
    title: Payment
    type: object
    properties:
      account:
        type: object
      currency:
        type: string
        description: >
          The three-digit identifier for the currency the payment
          was made in. USD = United States Dollar, JPY = Japanese Yen, etc.
      chargeid:
        type: string
        description: The unique identiifer for the charge associated with the payment.
      amount:
        type: integer
        format: int64
        description: >
          The specific quantity of money paid. Represented in the least significant
          unit in the associated currency (so cent for USD, which has partial Dollars, but Yen
          for JPY, which has no concept of partial Yen.)
      amountrefunded:
        type: integer
        format: int64
        description: >
          The specific quantity of money refunded. Represented in the least significant
          unit in the associated currency (so cent for USD, which has partial Dollars, but Yen
          for JPY, which has no concept of partial Yen.)
      status:
        type: string
        description: A marker describing the current state of the payment.
      captured:
        type: boolean
        description: Whether or not the payment has been officially acquired.
      live:
        type: boolean
        description: Whether or not the paymnet is a live one (false implies it's a test)

  PaymentArray:
    title: PaymentArray
    description: An array of Payments
    type: array
    items:
      $ref: '#/definitions/Payment'

  Order:
    title: Order
    description: An Order model
    type: object
    properties:
      createdAt:
        type: string
        description: The time this object was created. Conforms to RFCE3339.
      updatedAt:
        type: string
        description: The time this object was last updated. Conforms to RFCE3339.
      id:
        type: string
        description: The hanzo-assigned guid to identify this item.
      userId:
        type: string
        description: The ID of the user responsible for creating this order.
      shipping:
        type: integer
        format: int64
        description: >
          A monetary measure of shipping charges. Represented in the least
          significant measure of the store's set currency (so cents for USD, yen for
          JPY, etc).
      tax:
        type: integer
        format: int64
        description: >
          A monetary measure of all taxes assessed on the order.
          Represented in the least significant measure of the store's set
          currency (so cents for USD, yen for JPY, etc).
      subtotal:
        type: integer
        format: int64
        description: >
          A monetary measure of the order's line items, without any
          extra charges such as shipping or tax.  Represented in the least
          significant measure of the store's set  currency (so cents for
          USD, yen for JPY, etc).
      total:
        type: integer
        format: int64
        description: >
          A monetary measure of the order's grand total, including
          extra charges such as shipping or tax.  Represented in the least
          significant measure of the store's set  currency (so cents for
          USD, yen for JPY, etc).
      items:
        $ref: '#/definitions/LineItemArray'
      balance:
        type: integer
        format: int64
        description: >
          The amount currently due on this order. Represented in the least
          significant measure of the store's set  currency (so cents for
          USD, yen for JPY, etc).
      paid:
        type: integer
        format: int64
        description: >
          The amount that has been paid on this order. Represented
          in the least significant measure of the store's setcurrency (so
          cents for USD, yen for JPY, etc).
      refunded:
        type: integer
        format: int64
        description: >
          The amount that has been refunded on this order.
          Represented in the least significant measure of the store's
          set currency (so cents for USD, yen for JPY, etc).
      billingAddress:
        type: object
        description: The location the charges are billed to.
      shippingAddress:
        type: object
        description: The location any items are to be shipped to.
      discounts:
        type: array
        items:
          type: string
        description: >
          A listing of non-payment adjustments that have
          been applied to this order.
      payments:
        type: array
        items:
          type: object
        description: A listing of charges collected for this order.
      fulfillment:
        type: object
        description: Details on delivery of the order.
      cancelled:
        type: boolean
        description: Whether or not the order has been cancelled.
      shipped:
        type: boolean
        description: Whether or not the order has been shipped.
      test:
        type: boolean
        description: Whether or not the order is a test.

  OrderArray:
    title: OrderArray
    description: An array of Orders
    type: array
    items:
      $ref: '#/definitions/Order'
