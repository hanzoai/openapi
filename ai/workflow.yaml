swagger: '2.0'
info:
  version: v1.0
  title: Hanzo Workflows
  description: >
    Hanzo Workflows provides a system of APIs for configuring workflows as DAGs (Directed Acyclic Graphs) of nodes,
    triggers, and logic that define a full workflow, which can be applied to agents.

host: api.hanzo.ai
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    scopes: {}
    tokenUrl: 'https://api.hanzo.ai/auth'
  Authorization:
    name: Authorization
    type: apiKey
    in: header
  token:
    name: token
    type: apiKey
    in: query

'x-send-defaults': false
'x-explorer-enabled': false
'x-proxy-enabled': false
'x-samples-enabled': true
'x-samples-languages':
  - curl
  - node
  - go
  - java
  - php
  - python
  - ruby
  - swift

paths:
  '/workflow/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    delete:
      operationId: deleteWorkflow
      description: >
        Deletes the requested workflow. Cannot be undone.
      parameters:
        - name: token
          in: query
          required: false
          type: string
          description: The unique identifier for the workflow.
        - name: Accept
          in: header
          required: false
          type: string
      responses:
        '204':
          description: 'Workflow successfully deleted.'
          schema:
            type: object
            properties: {}

    put:
      operationId: replaceWorkflow
      description: >
        Replaces the specified workflow wholly. Any fields not passed are blanked.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Workflow'
      responses:
        '200':
          description: 'Workflow successfully replaced.'
          schema:
            $ref: '#/definitions/Workflow'

    patch:
      operationId: updateWorkflow
      description: >
        Updates a workflow piecemeal. Any fields not passed are not changed.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Workflow'
      responses:
        '200':
          description: 'Workflow successfully updated.'
          schema:
            $ref: '#/definitions/Workflow'

    get:
      operationId: getWorkflow
      description: >
        Returns the specified workflow.
      responses:
        '200':
          description: 'Workflow details retrieved successfully.'
          schema:
            $ref: '#/definitions/Workflow'

  '/workflow':
    post:
      operationId: createWorkflow
      description: >
        Creates a new workflow.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Workflow'
      responses:
        '201':
          description: 'New workflow created successfully.'
          schema:
            $ref: '#/definitions/Workflow'

    get:
      operationId: retrieveAllWorkflows
      description: >
        Returns a list of all available workflows.
      parameters:
        - name: token
          in: query
          type: string
        - name: accept
          in: header
          type: string
      responses:
        '200':
          description: 'List of workflows retrieved successfully.'
          schema:
            $ref: '#/definitions/WorkflowArray'

definitions:
  Workflow:
    title: Workflow
    type: object
    properties:
      id:
        type: string
        description: The hanzo-assigned guid to identify this workflow.
      createdAt:
        type: string
        description: The time this workflow was created. Conforms to RFC3339.
      updatedAt:
        type: string
        description: The time this workflow was last updated. Conforms to RFC3339.
      configuration:
        type: object
        description: The configuration details for the workflow.
        properties:
          nodes:
            type: array
            items:
              $ref: '#/definitions/Node'
            description: The nodes in the DAG.
          triggers:
            type: array
            items:
              $ref: '#/definitions/Trigger'
            description: The triggers in the DAG.
          logic:
            type: string
            description: The logic defining the workflow.

  Node:
    title: Node
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the node.
      type:
        type: string
        description: The type of node (e.g., action, decision).
      properties:
        type: object
        description: The properties of the node.

  Trigger:
    title: Trigger
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for the trigger.
      type:
        type: string
        description: The type of trigger (e.g., event, condition).
      properties:
        type: object
        description: The properties of the trigger.

  WorkflowArray:
    title: WorkflowArray
    description: An array of workflows.
    type: array
    items:
      $ref: '#/definitions/Workflow'
```
